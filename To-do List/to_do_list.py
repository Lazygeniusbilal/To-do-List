# -*- coding: utf-8 -*-
"""To-do list.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mDiHcq1BolJATrLFJ7zVLYSj75eYofCR
"""

class User:
    def __init__(self):
        self.__email = ""
        self.__password = ""
        self.__number = 0
        self.__database = {}

    def get_email(self):
        return self.__email

    def set_email(self, new_email):
        if new_email.endswith("@gmail.com") or new_email.endswith("@yahoo.com"):
            self.__email = new_email
        else:
            print("Invalid type email!")

    def set_password(self, new_password):
        self.__password = new_password

    def get_number(self):
        return self.__number

    def set_number(self, new_number):
        self.__number = new_number

    def get_database(self):
        return self.__database

import re

class Register(User):
    def user_registration(self):
        self.set_email(input("Enter your email: "))
        clean_number = re.sub(r"\D", "", input("Enter your number: "))
        if clean_number.isdigit() and len(clean_number) == 11:
            self.set_number(clean_number)
        else:
            print("Invalid number format!")
        self.set_password(input("Enter your password: "))

        if self.get_email() in self.get_database():
            print("Email already exists!")
            return False
        else:
            self.get_database()[self.get_email()] = [self.get_email(), self.get_number(), self.get_password()]
            print("Registration has been done")
            return True

class Login(User):
    def user_login(self):
        email = input("Enter your email: ")
        password = input("Enter your password: ")

        if email in self.get_database():
            if self.get_database()[email][2] == password:
                print("Login successful")
                return True
            else:
                print("Invalid password!")
                return False
        else:
            print("Email doesn't exist!")
            return False

class App(Register, Login):
    def __init__(self):
        super().__init__()
        self.__tasks = []
        self.user_access()

    def get_tasks(self):
        return self.__tasks
        self.menu()

    def user_access(self):
        inputs = input("""
        Hello Hope you are having a good day.
        1). Press 1 for logging In.
        2). Press 2 for Registration.
        3). Press 3 for exit
        """)
        if inputs == "1":
            if self.user_login():
                self.menu()
        elif inputs == "2":
            if self.user_registration():
                self.menu()
        else:
            exit()

    def menu(self):
        user_input = input("""
        Hi!How are you.
        1). Press 1 for adding task.
        2). Press 2 for removing task.
        3). Press 3 for checking taks.
        4). Press anything else for exit.
        """)
        if user_input == "1":
            self.add_task()
        elif user_input == "2":
            self.remove_task()
        elif user_input == "3":
            tasks = self.get_tasks()
            for task in tasks:
                print(task)
        else:
            exit()

    def add_task(self):
        add_task = input("Enter your task: ")
        self.__tasks.append(add_task)
        self.menu()

    def remove_task(self):
        task = input("Enter the task you want to remove from the list: ")
        tasks = self.get_tasks()
        if task in self.get_tasks():
            tasks.remove(task)
            self.menu()
        else:
            print("The task is not available in the list")
            self.menu()

obj1 = App()

